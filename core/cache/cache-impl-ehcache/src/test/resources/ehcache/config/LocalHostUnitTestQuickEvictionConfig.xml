<?xml version='1.0' encoding='UTF-8'?>
<!--
  #%L
  Nazgul Project: nazgul-core-cache-impl-ehcache
  %%
  Copyright (C) 2010 - 2017 jGuru Europe AB
  %%
  Licensed under the jGuru Europe AB license (the "License"), based
  on Apache License, Version 2.0; you may not use this file except
  in compliance with the License.
  
  You may obtain a copy of the License at
  
        http://www.jguru.se/licenses/jguruCorporateSourceLicense-2.0.txt
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="ehcache.xsd">

    <!--
    The ehcache-failsafe.xml is a default configuration for ehcache, if an ehcache.xml is not configured.

    The diskStore element is optional. It must be configured if you have overflowToDisk or diskPersistent enabled
    for any cache. If it is not configured, a warning will be issues and java.io.tmpdir will be used.

    diskStore has only one attribute - "path". It is the path to the directory where .data and .index files will be created.

    If the path is a Java System Property it is replaced by its value in the
    running VM.

    The following properties are translated:
    * user.home - User's home directory
    * user.dir - User's current working directory
    * java.io.tmpdir - Default temp file path
    * ehcache.disk.store.dir - A system property you would normally specify on the command line
          e.g. java -Dehcache.disk.store.dir=/u01/myapp/diskdir ...

    Subdirectories can be specified below the property e.g. java.io.tmpdir/one

    <diskStore path="java.io.tmpdir"/>
    -->
    <diskStore path="${dir:uniqueSubTarget}"/>

    <!--
    Mandatory Default Cache configuration. These settings will be applied to caches
    created programmatically using CacheManager.add(String cacheName)
    -->
    <defaultCache
            maxElementsInMemory="3"
            eternal="false"
            timeToIdleSeconds="1"
            timeToLiveSeconds="1"
            overflowToDisk="false"
            maxElementsOnDisk="10"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="2"
            memoryStoreEvictionPolicy="FIFO"
            transactionalMode="local"/>
</ehcache>
