<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ #%L
  ~   se.jguru.nazgul.core.poms.core-parent.nazgul-core-parent
  ~   %%
  ~   Copyright (C) 2010 - 2013 jGuru Europe AB
  ~   %%
  ~   Licensed under the jGuru Europe AB license (the "License"), based
  ~   on Apache License, Version 2.0; you may not use this file except
  ~   in compliance with the License.
  ~
  ~   You may obtain a copy of the License at
  ~
  ~         http://www.jguru.se/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~   #L%
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    ################################################
    # Section 1:  Project information
    ################################################
    -->
    <parent>
        <groupId>se.jguru.nazgul.tools.poms.external</groupId>
        <artifactId>nazgul-tools-external-parent</artifactId>
        <version>2.0.6</version>
        <relativePath />
    </parent>

    <groupId>se.jguru.nazgul.core.poms.core-parent</groupId>
    <artifactId>nazgul-core-parent</artifactId>
    <version>1.4.3</version>
    <name>${project.artifactId}</name>
    <packaging>pom</packaging>
    <description>The Nazgul Framework: Core project holds a collection of library-style Software Components
        adhering to the Nazgul-style component patterns, aimed at boosting productivity.
        All Software Components are compliant with Java SE, OSGi and JEE standards.</description>

    <licenses>
        <license>
            <name>jGuru Europe Corporate Source License, based on The Apache Software License, Version 2.0</name>
            <url>http://www.jguru.se/licenses/jguruCorporateSourceLicense-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>lj</id>
            <name>Lennart JÃ¶relid</name>
            <email>lj@jguru.se</email>
            <roles>
                <role>Committer</role>
            </roles>
            <organization>jGuru Europe AB</organization>
            <organizationUrl>http://www.jguru.se</organizationUrl>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <properties>
        <!--
            Supply the version of the Nazgul Tools framework as a Property.
        -->
        <nazgul.tools.version>2.0.6</nazgul.tools.version>

        <!--
            Other, external version properties.
        -->
        <osgi.version>4.3.1</osgi.version>
        <felix.version>4.2.1</felix.version>
        <felix.fileinstall.version>3.2.6</felix.fileinstall.version>
        <felix.gogoruntime.version>0.10.0</felix.gogoruntime.version>
        <felix.configadmin.version>1.4.0</felix.configadmin.version>
        <felix.dependencymanager.version>3.0.0</felix.dependencymanager.version>
        <felix.deploymentadmin.version>0.9.0</felix.deploymentadmin.version>
        <aries.blueprintcore.version>1.1.0</aries.blueprintcore.version>
        <aries.blueprint.version>1.1.0</aries.blueprint.version>
        <test.bundles.version>2.0.0</test.bundles.version>
        <nazgul.core.version>1.4.3-SNAPSHOT</nazgul.core.version>
    </properties>

    <!--
    ################################################
    # Section 2:  Dependency (management) settings
    ################################################
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>se.jguru.nazgul.tools.validation.aspect</groupId>
                <artifactId>nazgul-tools-validation-aspect</artifactId>
                <version>${nazgul.tools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jms_1.1_spec</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.transaction</groupId>
                <artifactId>jta</artifactId>
                <version>1.1</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>14.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>${osgi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.compendium</artifactId>
                <version>${osgi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.main</artifactId>
                <version>${felix.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.aries.blueprint</groupId>
                <artifactId>org.apache.aries.blueprint</artifactId>
                <version>${aries.blueprint.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>3.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api-osgi</artifactId>
                <version>2.2.7</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-osgi</artifactId>
                <version>2.2.7-b61</version>
            </dependency>
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>2.2.9</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>2.4.9</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa</artifactId>
            <version>${openjpa.version}</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <!--
    ################################################
    # Section 3:  Build settings
    ################################################
    -->
    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.build.directory}/jaxb2/transformed</directory>
                <includes>
                    <include>**/*.xsd</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Export-Package>{local-packages}</Export-Package>
                    </instructions>
                </configuration>
            </plugin>

            <!--
                Use the dependency plugin to copy the OpenJPA runtime
                to the target directory.
            -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.openjpa</groupId>
                                    <artifactId>openjpa</artifactId>
                                    <version>${openjpa.version}</version>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <destFileName>openjpa.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Configure the Surefire plugin to run all JPA unit tests
                with the OpenJPA javaagent enabled
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkMode>pertest</forkMode>
                    <argLine>-javaagent:${basedir}/target/openjpa.jar</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <outputDirectory>${project.build.directory}/jaxb2/transformed/generated-schema</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.plugin.version}</version>
                <configuration>
                    <localCheckout>true</localCheckout>
                    <tagNameFormat>nazgul-core-@{project.version}</tagNameFormat>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-hg</artifactId>
                        <version>1.7</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--
                To deploy a Staged site for the Nazgul Tools reactor, perform the following:

                a) Define a settings.xml server setting with the id jGuru_NazgulToolsSite:

                    <server>
                        <id>jGuru_NazgulToolsSite</id>
                        <username>yourUserName</username>
                        <privateKey>[path to your SSH private key]</privateKey>
                        <passphrase>[password for your SSH private key]</passphrase>
                        <filePermissions>664</filePermissions>
                        <directoryPermissions>755</directoryPermissions>
                    </server>

                   There are other security options than a certificate, as explained in
                   http://maven.apache.org/settings.html#Servers

                b) If you use certificate security as illustrated above, ensure that your *public* SSH key is
                   copied to the target server's SSH daemon's recognitioning file.

                   For example, on a Linux server this is typically done by appending your public SSH key to
                   the ${HOME}/.ssh/authorized_keys file of the account you want to use to deploy your staged site.

                   This process is better described on the net:

                   Linux:       http://www.csua.berkeley.edu/~ranga/notes/ssh_nopass.html
                   Mac OS X:    http://xiix.wordpress.com/2007/03/31/how-to-set-up-public-key-authentication-pka-on-your-mac/
                   Windows:     http://comptb.cects.com/1439-openssh-rsa-authentication-for-windows-and-linux

                d) Ensure that all the distributionManagement/site/url's relate to the topSiteURL value as the
                   staged project site should relate to the top of the site. Assuming that the topSiteURL is
                   ${nazgul-tools.sitedeploy.url}/version/${project.version}/ and your project Foo should reside
                   immediately below the root, the distributionManagement/site/url in that project should be defined
                   as ${nazgul-tools.sitedeploy.url}/version/${project.version}/foo.

                   Also, ensure that the distributionManagement/site/id is "jGuru_NazgulToolsSite", as illustrated
                   below:

                    <distributionManagement>
                        <site>
                            <id>jGuru_NazgulToolsSite</id>
                            <name>jGuru_NazgulToolsSite</name>
                            <url>${nazgul-tools.sitedeploy.url}/version/${project.version}/path/to/project</url>
                        </site>
                    </distributionManagement>

                e) Fire the two commands after one another:

                   mvn clean site

                   mvn -Dnazgul-tools.sitedeploy.url=scp://yourhost/path/to/deployment/root site:stage-deploy

                   where "yourhost" is the same server you uploaded the ssh certificate to in step (b).
                   The staged site should now reside in the directory
                   /path/to/deployment/root/version/${project.version}/staging
                   on the "yourhost" server.

                f) For simplicity, if you upload the site to the same host and location most of the time,
                   you are recommended to create a Maven profile within the settings.xml file defining the
                   property nazgul-tools.sitedeploy.url. Such a profile is created by adding the following
                   to the ${HOME}/.m2/settings.xml file:

                   ...
                   <profiles>
                        <profile>
                            <id>siteDeploy</id>
                            <properties>
                                <nazgul-tools.sitedeploy.url>[your url here]</nazgul-tools.sitedeploy.url>
                            </properties>
                        </profile>
                   </profiles>


                   This way you need not submit it on the command line as
                   illustrated in (e) above, but instead use the command:

                   mvn -PsiteDeploy site:stage-deploy
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.3</version>
                <executions>
                    <execution>
                        <id>attach-descriptor</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <topSiteURL>${nazgul-core.sitedeploy.url}/version/${project.version}/</topSiteURL>
                    <generateSitemap>true</generateSitemap>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.wagon</groupId>
                        <artifactId>wagon-ssh</artifactId>
                        <version>2.4</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.wagon</groupId>
                        <artifactId>wagon-file</artifactId>
                        <version>2.4</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>1.3</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-xhtml</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <!--
    ################################################
    # Section 4:  External systems
    ################################################
    -->
    <!--
        Define repository settings for Maven's deploy and release plugins.
        Moved to settings.xml, as per recommendation within Maven specs.
    -->
    <distributionManagement>
        <site>
            <id>jGuru_NazgulCoreSite</id>
            <name>jGuru_NazgulCoreSite</name>
            <url>${nazgul-core.sitedeploy.url}/version/${project.version}/core/poms/core-parent</url>
        </site>
    </distributionManagement>

    <scm>
        <url>https://bitbucket.org/lennartj/nazgul_core</url>
        <connection>scm:hg:https://bitbucket.org/lennartj/nazgul_core</connection>
        <developerConnection>scm:hg:file://${basedir}/../../../</developerConnection>
        <tag>nazgul-core-1.4.3</tag>
    </scm>

    <issueManagement>
        <system>bitbucket</system>
        <url>https://bitbucket.org/lennartj/nazgul_core/issues</url>
    </issueManagement>

</project>
